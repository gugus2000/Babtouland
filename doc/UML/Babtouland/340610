format 222
"validation_connexion" // Babtouland::config::user::validation_connexion
  revision 1
  modified_by 2 "gugus.demagny"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  classcompositediagramsettings end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  objectcompositediagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  php_dir "C:\\xampp\\htdocs\\moi\\Babtouland/config/user/validation_connexion/"
  deploymentview 313858 "validation_connexion"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 390274 "config"
      stereotype "source"
      php_src "<?php

if(isset($_POST['connexion_pseudo']) & isset($_POST['connexion_mdp']) & !empty($_POST['connexion_pseudo']) & !empty($_POST['connexion_mdp']))
{
	if ($Visiteur->Manager()->exist(array('pseudo' => $_POST['connexion_pseudo'])))
	{
		$Visiteur=new \\user\\Visiteur(array(
			'pseudo' => $_POST['connexion_pseudo'],
		));
		$Visiteur->recuperer();
		if ($Visiteur->connexion($_POST['connexion_mdp']))
		{
			$Notification=new \\user\\page\\Notification(array(
				'type'    => \\user\\page\\Notification::TYPE_SUCCES,
				'contenu' => $lang['user_validation_connexion_succes']
			), $this->getPage()->getPageElement());
			$get=$config['user_validation_connexion_suivant'];
		}
		else
		{
			$Notification=new \\user\\page\\Notification(array(
				'type'    => \\user\\page\\Notification::TYPE_ERREUR,
				'contenu' => $lang['erreur_connexion_mot_de_passe'],
			), $this->getPage()->getPageElement());
			$get=$config['user_validation_connexion_retour'];
		}
	}
	else
	{
		$Notification=new \\user\\page\\Notification(array(
			'type'    => \\user\\page\\Notification::TYPE_ERREUR,
			'contenu' => $lang['erreur_connexion_utilisateur'],
		), $this->getPage()->getPageElement());
		$get=$config['user_validation_connexion_retour'];
	}
}
else
{
	$Notification=new \\user\\page\\Notification(array(
		'type'    => \\user\\page\\Notification::TYPE_ERREUR,
		'contenu' => $lang['user_validation_connexion_formulaire'],
	), $this->getPage()->getPageElement());
	$get=$config['user_validation_connexion_retour'];
}

$this->getPage()->envoyerNotificationsSession();
header('location: '.$Routeur->creerLien($get));
exit();

?>"
      associated_elems
      end
    end
  end
end
