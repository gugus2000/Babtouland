class PageElement
!!!511234.php!!!	getTemplate() : string

		return $this->template;
!!!511362.php!!!	getFonctions() : string

		return $this->fonctions;
!!!511490.php!!!	getElements() : array

		return $this->elements;
!!!511618.php!!!	setTemplate(in template : string) : void

		$this->template=$template;
!!!511746.php!!!	setFonctions(in fonctions : string) : void

		$this->fonctions=$fonctions;
!!!511874.php!!!	setElements(in elements : array) : void

		$this->elements=$elements;
!!!512002.php!!!	afficherTemplate() : string

		return htmlspecialchars($this->template);
!!!512130.php!!!	afficherFonctions() : string

		return htmlspecialchars($this->fonctions);
!!!512258.php!!!	afficherElements() : string

		return htmlspecialchars(print_r($this->elements));
!!!512386.php!!!	afficherArray(in liste : array) : string

		$affichage='';
		foreach ($liste as $nom => $element)
		{
			if (is_object($element))
			{
				$affichage.=$element->afficher();
			}
			else if (is_array($element))
			{
				if (function_exists($nom.'Afficher'))
				{
					$affichage.=($nom.'Afficher')($element);
				}
				else
				{
					$affichage.=$this->afficherArray($element);
				}
			}
			else
			{
				$affichage.=$element;
			}
		}
		return $affichage;
!!!512514.php!!!	afficher() : string

		if ($this->getTemplate())
		{
			$contenuElement=file_get_contents($this->getTemplate());
		}
		else
		{
			$contenuElement='';
		}
		if ($this->getFonctions())
		{
			require $this->getFonctions();
		}
		foreach ($this->getElements() as $nom => $element)
		{
			if (is_object($element))
			{
				$valeur=$element->afficher();
			}
			else if (is_array($element))
			{
				if (function_exists($nom.'Afficher'))
				{
					$valeur=($nom.'Afficher')($element);
				}
				else
				{
					$valeur=$this->afficherArray($element);
				}
			}
			else
			{
				$valeur=$element;
			}
			$contenuElement=str_replace($this::SEPARATEUR.$nom.$this::SEPARATEUR, $valeur, $contenuElement);
		}
		return $contenuElement;
!!!512642.php!!!	getElement(in index : mixed) : mixed

		if (isset($this->elements[$index]))
		{
			return $this->elements[$index];
		}
		return False;
!!!512770.php!!!	__construct(in attributs : array) : void

		foreach ($attributs as $key => $value)
		{
			$method='set'.ucfirst($key);
			if (method_exists($this, $method))
			{
				$this->$method($value);
			}
		}
!!!512898.php!!!	ajouterElement(in nom : string, in element : PageElement) : void

		$this->elements[$nom]=$element;
!!!513026.php!!!	ajouterValeurElement(in index : mixed, in valeur : mixed) : void

		if (is_array($this->getElement($index)))
		{
			if (!in_array($valeur, $this->elements[$index]))		// La valeur n'existe pas déjà (évite de mettre plusieurs fois le même css par exemple)
			{
				$this->elements[$index][]=$valeur;
			}
		}
		else if (is_string($this->getElement($index)))
		{
			$this->elements[$index].=(string)$valeur;
		}
		else
		{
			throw new \Exception("On ne peut pas ajouter la valeur à l'élément s'il n'est pas un array ou une string");
		}
